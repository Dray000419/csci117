[local ["A","B"] [A = false(),local ["EXU1"] [EXU1 = true(),if EXU1 then [skip/BA] else [local ["EXU1"] [EXU1 = B,if EXU1 then [skip] else [skip]]]],case A of tree() then [skip] else [skip],case A of false() then [skip] else [skip],case A of true() then [skip] else [skip]],local ["A","One","Two","Three","A","Res","Res2"] [One = 1,Two = 2,Three = 3,A = 2,local ["EXU1","EXU2","EXU3"] [EXU1 = A,EXU2 = One,EXU3 = Res,"Eq" "EXU1" "EXU2" "EXU3"],local ["EXU1"] [EXU1 = Res,if EXU1 then [skip] else [skip]],local ["EXU1","EXU2","EXU3"] [EXU1 = A,EXU2 = Two,EXU3 = Res2,"Eq" "EXU1" "EXU2" "EXU3"],local ["EXU1"] [EXU1 = Res,if EXU1 then [skip/BA] else [skip]]],local ["X","Y"] [local ["T"] [local ["EXU1","EXU2"] [EXU1 = 3,EXU2 = T,T = tree(1:EXU1 2:EXU2)],local ["C","D","Five","Two"] [local ["A","B","PTU0"] [PTU0 = tree(1:A 2:B),PTU0 = T,X = 1,Y = 1,Five = 5,Two = 2,local ["EXU1","EXU2","EXU3"] [EXU1 = X,EXU2 = Y,EXU3 = C,"Eq" "EXU1" "EXU2" "EXU3"],local ["EXU1","EXU2","EXU3"] [EXU1 = Five,EXU2 = Two,EXU3 = D,"IntMinus" "EXU1" "EXU2" "EXU3"],local ["EXU1"] [EXU1 = C,if EXU1 then [local ["Z"] [local ["B"] [B = D,skip/BB]]] else [skip]]]]]],local ["Fun","R"] [Fun = proc {$ X} [R = X,skip/BR],local ["EXU1"] [EXU1 = 4,"Fun" "EXU1"]],local ["A","B"] [skip,local ["EXU1","EXU2","EXU3"] [EXU1 = 4,EXU2 = B,local ["EXU4","EXU5"] [EXU4 = B,EXU5 = B,EXU3 = '#'(1:EXU4 2:EXU5)],A = rdc(1:EXU1 2:EXU2 3:EXU3)],local ["Three","Four","Five","C"] [Three = 3,Four = 4,Five = 5,local ["EXU1","EXU2","EXU3"] [EXU1 = Three,EXU2 = Four,EXU3 = C,"IntMinus" "EXU1" "EXU2" "EXU3"],local ["EXU1","EXU2","EXU3"] [EXU1 = C,EXU2 = Five,EXU3 = B,"IntPlus" "EXU1" "EXU2" "EXU3"],skip/BA,skip/BB,skip/s]]]