[local ["N","L","P","F","Result","Producer","OddFilter","Consumer"] [thread [Producer = proc {$ N Limit Out} [local ["EXU1"] [local ["EXU2","EXU3"] [EXU2 = N,EXU3 = Limit,"LT" "EXU2" "EXU3" "EXU1"],if EXU1 then [local ["T","N1"] [local ["EXU1","EXU2"] [EXU1 = N,EXU2 = T,Out = '|'(1:EXU1 2:EXU2)],local ["EXU1","EXU2"] [EXU1 = N,EXU2 = 1,"IntPlus" "EXU1" "EXU2" "N1"],local ["EXU1","EXU2","EXU3"] [EXU1 = N1,EXU2 = Limit,EXU3 = T,"Producer" "EXU1" "EXU2" "EXU3"]]] else [Out = nil()]]]],thread [OddFilter = proc {$ P Out} [case P of nil() then [Out = nil()] else [case P of '|'(1:X 2:Y) then [local ["T"] [local ["EXU1"] [local ["EXU2","EXU3"] [local ["EXU5","EXU6"] [EXU5 = X,EXU6 = 2,"Mod" "EXU5" "EXU6" "EXU2"],EXU3 = 0,"Eq" "EXU2" "EXU3" "EXU1"],if EXU1 then [local ["EXU1","EXU2"] [EXU1 = X,EXU2 = T,Out = '|'(1:EXU1 2:EXU2)],local ["EXU1","EXU2"] [EXU1 = Y,EXU2 = T,"OddFilter" "EXU1" "EXU2"]] else [local ["EXU1","EXU2"] [EXU1 = Y,EXU2 = Out,"OddFilter" "EXU1" "EXU2"]]]]] else [skip]]]],thread [Consumer = proc {$ P EXU1} [case P of nil() then [EXU1 = 0] else [case P of '|'(1:X 2:Y) then [local ["R"] [local ["EXU2","EXU3"] [EXU2 = X,local ["EXU5"] [EXU5 = Y,"Consumer" "EXU5" "EXU3"],"IntPlus" "EXU2" "EXU3" "EXU1"]]] else [skip]]]],N = 0,L = 100,local ["EXU1","EXU2","EXU3"] [EXU1 = N,EXU2 = L,EXU3 = P,"Producer" "EXU1" "EXU2" "EXU3"],local ["EXU1","EXU2"] [EXU1 = P,EXU2 = F,"OddFilter" "EXU1" "EXU2"],skip/BF,local ["EXU1"] [EXU1 = F,"Consumer" "EXU1" "Result"],skip/BResult]]